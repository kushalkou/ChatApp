//SERVER

import java.io.*;
import java.net.*;

public class Server {

    public static void main(String[] args) {
        try {
            ServerSocket serverSocket = new ServerSocket(1234);
            System.out.println("Server started. Waiting for clients...");

            Socket clientSocket = serverSocket.accept(); // blocking call
            System.out.println("Client connected!");

            BufferedReader in = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));
            PrintWriter out = new PrintWriter(clientSocket.getOutputStream(), true);

            BufferedReader keyboard = new BufferedReader(new InputStreamReader(System.in));

            new Thread(() -> {
                String clientMsg;
                try {
                    while ((clientMsg = in.readLine()) != null) {
                        System.out.println("Client: " + clientMsg);
                    }
                } catch (IOException e) {
                    System.out.println("Client disconnected.");
                }
            }).start();

            new Thread(() -> {
                String serverMsg;
                try {
                    while ((serverMsg = keyboard.readLine()) != null) {
                        out.println(serverMsg);
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }).start();

        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
       


//CLIENT

import java.io.*;
import java.net.*;

public class Client {

    public static void main(String[] args) {
        try {
            Socket socket = new Socket("localhost", 1234);
            System.out.println("Connected to the server!");

            BufferedReader keyboard = new BufferedReader(new InputStreamReader(System.in));
            PrintWriter out = new PrintWriter(socket.getOutputStream(), true);

            BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()));

            String msg;
            while ((msg = keyboard.readLine()) != null) {
                out.println(msg);                  
                String serverMsg = in.readLine();
                if (serverMsg != null) {
                    System.out.println("Server: " + serverMsg);
                }
            }

            socket.close();
            
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
